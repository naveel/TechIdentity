@model HBL_MLDV_APP.Areas.UserManagement.Models.Role.vu_role_mst_aprv
@using HBL_MLDV_APP.Models.Security

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section PageStyles{

    <link href="~/bower_components/select2/dist/css/select2.min.css" rel="stylesheet" />
    <link href="~/bower_components/bootstrap-toggle/css/bootstrap-toggle.min.css" rel="stylesheet" />
    <!-- iCheck for checkboxes and radio inputs -->
    <link rel="stylesheet" href="~/Content/plugins/iCheck/all.css">
}

<div class="row">
    <div class="col-sm-12">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">Create New Role</h3>
                <div class="box-tools pull-right">
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-sm btn-primary" })
                </div><!-- /.box-tools -->
            </div><!-- /.box-header -->
            <div class="box-body">
                <div class="row">
                    <div class="col-sm-12">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            @Html.HiddenFor(x => x.sender)
                            <div class="row">
                                <div class="col-sm-12 col-md-offset-2 col-md-6">
                                    <div class="form-horizontal">
                                        <div class="row">
                                            <div class="col-sm-12 col-md-3">
                                                @Html.LabelFor(x => x.role_desc, new { @class = "control-label", @for = "role_desc" })
                                            </div>
                                            <div class="col-sm-12 col-md-9">
                                                @Html.TextBoxFor(model => model.role_desc, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.role_desc, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 col-md-4">
                                    <div class="form-horizontal">
                                        <div class="row">
                                            <div class="col-sm-12 col-md-3">
                                                @Html.LabelFor(x => x.status_check, new { @class = "control-label", @for = "status_check" })
                                            </div>
                                            <div class="col-sm-10 col-md-9">
                                                @Html.CheckBoxFor(model => model.status_check, new { @data_toggle = "toggle" })
                                                @Html.ValidationMessageFor(model => model.status_check, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <div class="col-sm-12">
                                    <table class="table table-bordered table-hover">
                                        <thead>
                                            <tr>
                                                <th class="text-center" style="width:25%;">Module</th>
                                                <th class="text-center">
                                                    <span><input type="checkbox" class="minimal" id="selectAll" data-ref-check=".selectCheck" /></span>
                                                    <span style="padding-left:20px;">View</span>
                                                </th>
                                                <th class="text-center">
                                                    <span><input type="checkbox" class="minimal" id="createAll" data-ref-check=".createCheck" /></span>
                                                    <span style="padding-left:20px;">Create</span>
                                                </th>
                                                <th class="text-center">
                                                    <span><input type="checkbox" class="minimal" id="updateAll" data-ref-check=".updateCheck" /></span>
                                                    <span style="padding-left:20px;">View & Edit</span>
                                                </th>
                                                <th class="text-center">
                                                    <span><input type="checkbox" class="minimal" id="deleteAll" data-ref-check=".deleteCheck" /></span>
                                                    <span style="padding-left:20px;">Delete</span>
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @{
                                                if (TempData.ContainsKey("mnuList"))
                                                {
                                                    var parentMenusList = (TempData.Peek("mnuList") as List<HBL_MLDV_APP.Areas.UserManagement.Models.vu_mnu_activity>).Where(a => a.activityparentid == 0).ToList();
                                                    int index = 0;

                                                    foreach (var item in parentMenusList)
                                                    {
                                                        <tr>
                                                            <th colspan="5">@item.activitytitle</th>
                                                        </tr>

                                                        var childMenusList = (TempData.Peek("mnuList") as List<HBL_MLDV_APP.Areas.UserManagement.Models.vu_mnu_activity>).Where(a => a.activityparentid == item.activityid).ToList();
                                                        if (childMenusList != null && childMenusList.Count > 0)
                                                        {
                                                            for (int i = 0; i < childMenusList.Count; i++)
                                                            {
                                                                <tr>
                                                                    <td><span style="padding-left:75px;">@childMenusList[i].activitytitle</span>@Html.HiddenFor(x => x.cando[index].activityid, new { @Value = childMenusList[i].activityid })</td>
                                                                    <td class="text-center">@Html.CheckBoxFor(x => x.cando[index].can_view_bool, new { @class = "minimal selectCheck", @data_ref_check = "#selectAll" })</td>
                                                                    <td class="text-center">@Html.CheckBoxFor(x => x.cando[index].can_add_bool, new { @class = "minimal createCheck", @data_ref_check = "#createAll" })</td>
                                                                    <td class="text-center">@Html.CheckBoxFor(x => x.cando[index].can_edit_bool, new { @class = "minimal updateCheck", @data_ref_check = "#updateAll" })</td>
                                                                    <td class="text-center">@Html.CheckBoxFor(x => x.cando[index].can_del_bool, new { @class = "minimal deleteCheck", @data_ref_check = "#deleteAll" })</td>
                                                                </tr>

                                                                index++;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <div class="col-sm-12 col-md-offset-10 col-md-2">
                                    <div class="btn-group dropup pull-right">
                                        <button type="button" onclick="ValidateForm('1');" class="btn btn-success"><i class="fa fa-save"></i> Draft</button>
                                        <button type="button" class="btn btn-success dropdown-toggle" data-toggle="dropdown">
                                            <span class="caret"></span>
                                            <span class="sr-only">Toggle Dropdown</span>
                                        </button>
                                        <ul class="dropdown-menu" role="menu">
                                            <li><a onclick="ValidateForm('6');" href="javascript:void(0);"><i class="fa fa-send"></i> Submit</a></li>
                                            <li class="divider"></li>
                                            <li><a href="#"><i class="fa fa-print"></i> Print</a></li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section PageScripts {

    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/bower_components/select2/dist/js/select2.full.min.js"></script>
    <script src="~/Content/plugins/bootstrap-maxlength/bootstrap-maxlength.min.js"></script>
    <script src="~/Content/plugins/iCheck/icheck.min.js"></script>
    <script src="~/bower_components/bootstrap-toggle/js/bootstrap-toggle.min.js"></script>

    @{
        if (TempData["Notify"] != null)
        {
            <script>Notify("@TempData["NotifyType"].ToString()", "@TempData["Notify"].ToString()");</script>
        }
    }

    <script>
        $.validator.setDefaults({
            ignore: ":hidden, .ignore"
        });
    </script>

    <script src="~/Scripts/RoleAccess.js"></script>
}

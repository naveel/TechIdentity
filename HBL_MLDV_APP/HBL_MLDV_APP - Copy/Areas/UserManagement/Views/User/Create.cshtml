@model HBL_MLDV_APP.Areas.UserManagement.Models.vu_users_aprv_vm
@using HBL_MLDV_APP.Models.Security

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section PageStyles{

    <link href="~/bower_components/select2/dist/css/select2.min.css" rel="stylesheet" />
    <link href="~/Content/plugins/iCheck/all.css" rel="stylesheet" />
    <link href="~/bower_components/bootstrap-toggle/css/bootstrap-toggle.min.css" rel="stylesheet" />
}

<div class="row">
    <div class="col-sm-12">
        <div class="nav-tabs-custom">
            <!-- Tabs within a box -->
            <ul class="nav nav-tabs">
                <li class="active"><a href="#user-account" data-toggle="tab" style="background-color: transparent;">User Account</a></li>
                <li><a href="#user-access" data-toggle="tab" style="background-color: transparent;">User Access</a></li>
                <div class="pull-right" style="padding-top:7px;padding-right:7px;">@Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-sm btn-primary" })</div>
            </ul>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @Html.HiddenFor(x => x.sender)
                <div class="tab-content no-padding">
                    <div class="chart tab-pane active" id="user-account" style="position: relative; height: auto;">
                        <div class="box-body">
                            <div class="row">
                                <div class="col-sm-12">
                                    <div class="row">
                                        <div class="col-sm-12 col-md-6">
                                            <div class="form-horizontal">
                                                <div class="row">
                                                    <div class="col-sm-12 col-md-3">
                                                        @Html.LabelFor(x => x.user_full_name, new { @class = "control-label", @for = "user_full_name" })
                                                    </div>
                                                    <div class="col-sm-12 col-md-9">
                                                        @Html.TextBoxFor(model => model.user_full_name, new { @class = "form-control", @onblur = "ValidateText(this);" })
                                                        @Html.ValidationMessageFor(model => model.user_full_name, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-sm-12 col-md-3">
                                                        @Html.LabelFor(x => x.username, new { @class = "control-label", @for = "username" })
                                                    </div>
                                                    <div class="col-sm-10 col-md-9">
                                                        @Html.TextBoxFor(model => model.username, new { @class = "form-control", @disabled = "disabled" })
                                                        @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-sm-12 col-md-3">
                                                        @Html.LabelFor(x => x.email, new { @class = "control-label", @for = "email" })
                                                    </div>
                                                    <div class="col-sm-12 col-md-9">
                                                        @Html.TextBoxFor(model => model.email, new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-sm-12 col-md-3">
                                                        @Html.LabelFor(x => x.password, new { @class = "control-label", @for = "password" })
                                                    </div>
                                                    <div class="col-sm-12 col-md-9">
                                                        @Html.TextBoxFor(model => model.password, new { @class = "form-control", @type = "password", @onkeyup = "ValidatePasswordRegEx($(this).val(), $('#pswdVal'));" })
                                                        @Html.ValidationMessageFor(x => x.password, "", new { @class = "text-danger" })
                                                        <span id="pswdVal"></span>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-sm-12 col-md-3">
                                                        @Html.LabelFor(x => x.mobile_cntry_cde, new { @class = "control-label", @for = "mobile_cntry_cde" })
                                                    </div>
                                                    <div class="col-sm-12 col-md-3">
                                                        <select id="mobile_cntry_cde" name="mobile_cntry_cde" onchange="SetPhoneNumberLength(this);" class="form-control" data-val="true" data-val-required="Mobile Code is required.">
                                                            <option value="" data-flag-url="">--- Select ---</option>
                                                            @{
                                                                var countryList = TempData.Peek("countryList") as List<HBL_MLDV_APP.Models.country_mst>;
                                                                foreach (HBL_MLDV_APP.Models.country_mst item in countryList)
                                                                {
                                                                    <option value="@item.call_cde" data-flag-url="@item.img_url" data-country-name="@item.country_desc" data-phone-len="@item.phne_no_len">@item.call_cde - @item.country_desc</option>
                                                                }
                                                            }
                                                        </select>
                                                        @Html.ValidationMessageFor(x => x.mobile_cntry_cde, "", new { @class = "text-danger" })
                                                    </div>
                                                    <div class="col-sm-12 col-md-6">
                                                        @Html.TextBoxFor(x => x.mobile_nbr, new { @class = "form-control maxLength", @onblur = "ValidateNumber(this);" })
                                                        @Html.ValidationMessageFor(x => x.mobile_nbr, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-sm-12 col-md-3">
                                                        @Html.LabelFor(x => x.remarks, new { @class = "control-label", @for = "remarks" })
                                                    </div>
                                                    <div class="col-sm-12 col-md-9">
                                                        @Html.TextAreaFor(model => model.remarks, new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.remarks, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-12 col-md-6">
                                            <div class="form-horizontal">
                                                <div class="row">
                                                    <div class="col-sm-12 col-md-3">
                                                        @Html.LabelFor(x => x.role_sk, new { @class = "control-label", @for = "role_sk" })
                                                    </div>
                                                    <div class="col-sm-12 col-md-9">
                                                        @if (TempData.ContainsKey("rolesList"))
                                                        {
                                                            var rolesList = TempData.Peek("rolesList") as List<HBL_MLDV_APP.Models.DropDownModel>;
                                                            @Html.DropDownListFor(x => x.role_sk, new SelectList(rolesList, "value", "text"), new { @class = "form-control", @multiple = "multiple", @style = "width:100%;" })
                                                        }
                                                        else
                                                        {
                                                            <select id="role_sk" name="role_sk" class="form-control" multiple="multiple" style="width:100%;">
                                                                <option value="">--- Select ---</option>
                                                            </select>
                                                        }
                                                        @Html.ValidationMessageFor(x => x.role_sk, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-sm-12 col-md-3">
                                                        @Html.LabelFor(x => x.br_code, new { @class = "control-label", @for = "br_code" })
                                                    </div>
                                                    <div class="col-sm-12 col-md-9">
                                                        @if (TempData.ContainsKey("branchList"))
                                                        {
                                                            var branchList = TempData.Peek("branchList") as List<HBL_MLDV_APP.Models.DropDownModel>;
                                                            @Html.DropDownListFor(x => x.br_code, new SelectList(branchList, "value", "text"), new { @class = "form-control", @multiple = "multiple", @style = "width:100%;" })
                                                        }
                                                        else
                                                        {
                                                            <select id="br_code" name="br_code" class="form-control" multiple="multiple" style="width:100%;">
                                                                <option value="">--- Select ---</option>
                                                            </select>
                                                        }
                                                        @Html.ValidationMessageFor(x => x.br_code, "", new { @class = "text-danger" })
                                                    </div>
                                                </div><div class="row">
                                                    <div class="col-sm-12 col-md-3">
                                                        @Html.LabelFor(x => x.br_desc, new { @class = "control-label", @for = "br_desc" })
                                                    </div>
                                                    <div class="col-sm-12 col-md-9">
                                                        @Html.TextBoxFor(x => x.br_desc, new { @class = "form-control", @readonly = "readonly", @Value = ApplicationSession.Session.br_desc.ToString() })
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-sm-12 col-md-3">
                                                        @Html.LabelFor(x => x.operator_name, new { @class = "control-label", @for = "operator_name" })
                                                    </div>
                                                    <div class="col-sm-12 col-md-9">
                                                        @Html.TextBoxFor(x => x.operator_name, new { @class = "form-control", @readonly = "readonly", @Value = ApplicationSession.Session.UserAccountObj.Username.ToString() })
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-sm-12 col-md-3">
                                                        @Html.LabelFor(x => x.status_sk, new { @class = "control-label", @for = "status_sk" })
                                                    </div>
                                                    <div class="col-sm-12 col-md-9">
                                                        @if (TempData.ContainsKey("statusMasterList"))
                                                        {
                                                            var statusMasterList = TempData.Peek("statusMasterList") as List<HBL_MLDV_APP.Models.DropDownModel>;
                                                            @Html.DropDownListFor(x => x.status_sk, new SelectList(statusMasterList, "value", "text"), new { @class = "form-control remove-caret", @id = "custom_status_sk", @disabled = "disabled", @style = "width:100%;" })
                                                        }
                                                        else
                                                        {
                                                            <select id="custom_status_sk" class="form-control remove-caret" style="width:100%;" disabled="disabled">
                                                                <option value="">--- Select ---</option>
                                                            </select>
                                                        }
                                                        @Html.HiddenFor(x => x.status_sk)
                                                        @Html.ValidationMessageFor(x => x.status_sk, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-sm-12 col-md-offset-3">
                                                        @Html.CheckBoxFor(x => x.status_bool, new { @data_toggle = "toggle", @checked="checked" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <br />
                                    <div class="row">
                                        <div class="col-sm-12 col-md-offset-10 col-md-2">
                                            <div class="btn-group dropup pull-right">
                                                <button type="button" onclick="ValidateForm('1');" class="btn btn-success"><i class="fa fa-save"></i> Draft</button>
                                                <button type="button" class="btn btn-success dropdown-toggle" data-toggle="dropdown">
                                                    <span class="caret"></span>
                                                    <span class="sr-only">Toggle Dropdown</span>
                                                </button>
                                                <ul class="dropdown-menu" role="menu">
                                                    <li><a onclick="ValidateForm('6');" href="javascript:void(0);"><i class="fa fa-send"></i> Submit</a></li>
                                                    <li class="divider"></li>
                                                    <li><a href="#"><i class="fa fa-print"></i> Print</a></li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="chart tab-pane" id="user-access" style="position: relative; height: auto;">
                        <div class="box-body">
                            <div class="row">
                                <div class="col-sm-12">
                                    <table class="table table-bordered table-hover">
                                        <thead>
                                            <tr>
                                                <th class="text-center" style="width:25%;">Module</th>
                                                <th class="text-center">
                                                    <span><input type="checkbox" class="minimal" id="selectAll" data-ref-check=".selectCheck" /></span>
                                                    <span style="padding-left:20px;">View</span>
                                                </th>
                                                <th class="text-center">
                                                    <span><input type="checkbox" class="minimal" id="createAll" data-ref-check=".createCheck" /></span>
                                                    <span style="padding-left:20px;">Create</span>
                                                </th>
                                                <th class="text-center">
                                                    <span><input type="checkbox" class="minimal" id="updateAll" data-ref-check=".updateCheck" /></span>
                                                    <span style="padding-left:20px;">View & Edit</span>
                                                </th>
                                                <th class="text-center">
                                                    <span><input type="checkbox" class="minimal" id="deleteAll" data-ref-check=".deleteCheck" /></span>
                                                    <span style="padding-left:20px;">Delete</span>
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @{
                                                if (TempData["mnuList"] != null)
                                                {
                                                    var parentMenusList = (TempData["mnuList"] as List<HBL_MLDV_APP.Areas.UserManagement.Models.vu_mnu_activity>).Where(a => a.activityparentid == 0).ToList();
                                                    int index = 0;

                                                    foreach (var item in parentMenusList)
                                                    {
                                                        <tr>
                                                            <th colspan="5">@item.activitytitle</th>
                                                        </tr>

                                                        var childMenusList = (TempData["mnuList"] as List<HBL_MLDV_APP.Areas.UserManagement.Models.vu_mnu_activity>).Where(a => a.activityparentid == item.activityid).ToList();
                                                        if (childMenusList != null && childMenusList.Count > 0)
                                                        {
                                                            for (int i = 0; i < childMenusList.Count; i++)
                                                            {
                                                                <tr>
                                                                    <td><span style="padding-left:75px;">@childMenusList[i].activitytitle</span>@Html.HiddenFor(x => x.cando[index].activityid, new { @Value = childMenusList[i].activityid })</td>
                                                                    <td class="text-center">@Html.CheckBoxFor(x => x.cando[index].can_view_bool, new { @class = "minimal selectCheck", @data_ref_check = "#selectAll" })</td>
                                                                    <td class="text-center">@Html.CheckBoxFor(x => x.cando[index].can_add_bool, new { @class = "minimal createCheck", @data_ref_check = "#createAll" })</td>
                                                                    <td class="text-center">@Html.CheckBoxFor(x => x.cando[index].can_edit_bool, new { @class = "minimal updateCheck", @data_ref_check = "#updateAll" })</td>
                                                                    <td class="text-center">@Html.CheckBoxFor(x => x.cando[index].can_del_bool, new { @class = "minimal deleteCheck", @data_ref_check = "#deleteAll" })</td>
                                                                </tr>

                                                                index++;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            @*<tr>
                                                    <th colspan="5">Transactions</th>
                                                </tr>
                                                <tr>
                                                    <td class="text-center">FC Trading</td>
                                                    <td class="text-center"><input type="checkbox" class="js-switch" /></td>
                                                    <td class="text-center"><input type="checkbox" class="js-switch" /></td>
                                                    <td class="text-center"><input type="checkbox" class="js-switch" /></td>
                                                    <td class="text-center"><input type="checkbox" class="js-switch" /></td>
                                                    <td></td>
                                                </tr>
                                                <tr style="background-color: beige;">
                                                    <td class="text-center">FC Trading</td>
                                                    <td class="text-center"><input type="checkbox" class="js-switch" /></td>
                                                    <td class="text-center"><input type="checkbox" class="js-switch" /></td>
                                                    <td class="text-center"><input type="checkbox" class="js-switch" /></td>
                                                    <td class="text-center"><input type="checkbox" class="js-switch" /></td>
                                                    <td>Counter Staff</td>
                                                </tr>
                                                <tr style="background-color: beige;">
                                                    <td class="text-center">Remittance</td>
                                                    <td class="text-center"><input type="checkbox" class="js-switch" /></td>
                                                    <td class="text-center"><input type="checkbox" class="js-switch" /></td>
                                                    <td class="text-center"><input type="checkbox" class="js-switch" /></td>
                                                    <td class="text-center"><input type="checkbox" class="js-switch" /></td>
                                                    <td>Counter Staff</td>
                                                </tr>
                                                <tr style="background-color: beige;">
                                                    <td class="text-center">TT Payment</td>
                                                    <td class="text-center"><input type="checkbox" class="js-switch" /></td>
                                                    <td class="text-center"><input type="checkbox" class="js-switch" /></td>
                                                    <td class="text-center"><input type="checkbox" class="js-switch" /></td>
                                                    <td class="text-center"><input type="checkbox" class="js-switch" /></td>
                                                    <td>Counter Staff</td>
                                                </tr>
                                                <tr>
                                                    <th colspan="5">Setup</th>
                                                </tr>
                                                <tr>
                                                    <td class="text-center">Customer Profile</td>
                                                    <td class="text-center"><input type="checkbox" class="js-switch" /></td>
                                                    <td class="text-center"><input type="checkbox" class="js-switch" /></td>
                                                    <td class="text-center"><input type="checkbox" class="js-switch" /></td>
                                                    <td class="text-center"><input type="checkbox" class="js-switch" /></td>
                                                    <td>Counter Staff</td>
                                                </tr>
                                                <tr>
                                                    <td class="text-center">Settlement Rate</td>
                                                    <td class="text-center"><input type="checkbox" class="js-switch" /></td>
                                                    <td class="text-center"><input type="checkbox" class="js-switch" /></td>
                                                    <td class="text-center"><input type="checkbox" class="js-switch" /></td>
                                                    <td class="text-center"><input type="checkbox" class="js-switch" /></td>
                                                    <td>Counter Staff</td>
                                                </tr>*@
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

    </div>
</div>

@section PageScripts {

    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/bower_components/select2/dist/js/select2.full.min.js"></script>
    <script src="~/Content/plugins/bootstrap-maxlength/bootstrap-maxlength.min.js"></script>
    <script src="~/Content/plugins/iCheck/icheck.min.js"></script>
    <script src="~/bower_components/bootstrap-toggle/js/bootstrap-toggle.min.js"></script>

    @{
        if (TempData["Notify"] != null)
        {
            <script>Notify("@TempData["NotifyType"].ToString()", "@TempData["Notify"].ToString()");</script>
        }
    }

    <script>
        $.validator.setDefaults({
            ignore: ":hidden, .ignore"
        });
    </script>

    <script src="~/Scripts/UserRole.js"></script>
<script src="~/scripts/demo.js"></script>
}